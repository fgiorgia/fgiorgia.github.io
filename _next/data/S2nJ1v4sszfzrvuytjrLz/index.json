{"pageProps":{"featuredProjects":[{"slug":"sales-dashboard","title":"Sales Performance Dashboard","description":"Created a dynamic Excel dashboard analyzing regional sales performance with YoY comparisons","longDescription":"A comprehensive Excel dashboard that provides real-time visibility into sales performance across different regions, with year-over-year comparisons and trend analysis. The dashboard includes interactive filters, conditional formatting, and automated data refresh capabilities.","category":"Excel","tags":["Data Analysis","Dashboard","Sales Analytics"],"categoryColor":"bg-green-100 text-green-800","thumbnail":"/images/projects/thumbnail/customer_feedback-dashboardv-2023.webp","imageGallery":["/images/projects/thumbnail/customer_feedback-dashboardv-2023.webp","/images/projects/thumbnail/unnamed.png","/images/projects/thumbnail/Infruid's_Self-Service_BI_Tool_Dashboard.jpg"],"icon":null,"iconBgColor":"bg-green-200","technologies":["Excel","Power Query","DAX","VBA"],"client":"Retail Corporation","completedDate":"January 2023","featured":true,"isDemo":true,"outcomes":[{"title":"15%","value":15,"description":"Increase in sales team productivity"},{"title":"4hrs","value":4,"description":"Weekly time saved on reporting"},{"title":"100%","value":100,"description":"Automated data refresh process"}],"challenges":["Integrating data from multiple departmental sources","Creating a user-friendly interface for non-technical users","Optimizing formula performance for large datasets","Implementing dynamic date ranges for flexible reporting periods"],"codeSnippets":[{"title":"VBA Code for Auto-Refresh","language":"vba","code":"Sub RefreshAllData()\n    ' Turn off screen updating to improve performance\n    Application.ScreenUpdating = False\n    \n    ' Refresh all data connections\n    ThisWorkbook.RefreshAll\n    \n    ' Update all pivot tables\n    Dim ws As Worksheet\n    Dim pt As PivotTable\n    \n    For Each ws In ThisWorkbook.Worksheets\n        For Each pt In ws.PivotTables\n            pt.RefreshTable\n        Next pt\n    Next ws\n    \n    ' Update last refresh time\n    Worksheets(\"Dashboard\").Range(\"LastRefresh\").Value = Now()\n    \n    ' Turn screen updating back on\n    Application.ScreenUpdating = True\n    \n    ' Notify user\n    MsgBox \"All data refreshed successfully!\", vbInformation\nEnd Sub"}]},{"slug":"customer-segmentation","title":"Customer Segmentation Analysis","description":"Applied clustering algorithms to identify key customer segments based on purchase behavior","longDescription":"Machine learning approach to identify key customer segments based on purchase behavior, demographics, and engagement metrics. The project involved data preparation, feature engineering, model training, and visualization of segment characteristics.","category":"Python","tags":["Data Analysis","Machine Learning","Customer Analytics"],"categoryColor":"bg-blue-100 text-blue-800","imageGallery":["/images/projects/thumbnail/customer_feedback-dashboardv-2023.webp","/images/projects/thumbnail/unnamed.png","/images/projects/thumbnail/Infruid's_Self-Service_BI_Tool_Dashboard.jpg"],"icon":null,"iconBgColor":"bg-blue-200","technologies":["Python","pandas","scikit-learn","matplotlib","seaborn"],"client":"E-commerce Retailer","completedDate":"March 2023","featured":true,"isDemo":true,"outcomes":[{"title":"5","value":5,"description":"Distinct customer segments identified"},{"title":"27%","value":27,"description":"Increase in email campaign conversion rates"},{"title":"14%","value":14,"description":"Increase in average order value"}],"challenges":["Handling missing data in customer records","Determining the optimal number of segments","Creating interpretable segments for the marketing team","Developing a repeatable methodology for future analysis"],"codeSnippets":[{"title":"Data Preprocessing","language":"python","code":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.impute import SimpleImputer\n\n# Load the customer data\ndf = pd.read_csv('customer_data.csv')\n\n# Handle missing values\nimputer = SimpleImputer(strategy='median')\ndf_numeric = pd.DataFrame(imputer.fit_transform(df.select_dtypes(include=['float64', 'int64'])))\ndf_numeric.columns = df.select_dtypes(include=['float64', 'int64']).columns\n\n# Scale the data for clustering\nscaler = StandardScaler()\ndf_scaled = scaler.fit_transform(df_numeric)\n\n# Print summary statistics\nprint(f\"Dataset shape: {df.shape}\")\nprint(f\"Number of missing values: {df.isna().sum().sum()}\")\nprint(f\"Column summary:\\n{df.describe().T}\")\n"},{"title":"K-means Clustering Implementation","language":"python","code":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nimport matplotlib.pyplot as plt\n\n# Find optimal number of clusters\nsilhouette_scores = []\ninertias = []\nk_range = range(2, 11)\n\nfor k in k_range:\n    kmeans = KMeans(n_clusters=k, random_state=42, n_init=10)\n    kmeans.fit(df_scaled)\n    silhouette_scores.append(silhouette_score(df_scaled, kmeans.labels_))\n    inertias.append(kmeans.inertia_)\n\n# Plot the elbow curve\nplt.figure(figsize=(10, 5))\nplt.subplot(1, 2, 1)\nplt.plot(k_range, inertias, 'o-')\nplt.xlabel('Number of clusters')\nplt.ylabel('Inertia')\nplt.title('Elbow Method')\n\nplt.subplot(1, 2, 2)\nplt.plot(k_range, silhouette_scores, 'o-')\nplt.xlabel('Number of clusters')\nplt.ylabel('Silhouette Score')\nplt.title('Silhouette Method')\n\nplt.tight_layout()\nplt.savefig('optimal_clusters.png', dpi=300)\nplt.show()\n\n# Apply final model with optimal clusters (k=5)\nfinal_model = KMeans(n_clusters=5, random_state=42, n_init=10)\nclusters = final_model.fit_predict(df_scaled)\n\n# Add cluster labels to original dataframe\ndf['cluster'] = clusters\n"}]},{"slug":"executive-kpi-dashboard","title":"Executive KPI Dashboard","description":"Developed an interactive dashboard for tracking company-wide KPIs and performance metrics","longDescription":"An interactive Power BI dashboard providing executives with real-time visibility into key performance indicators across the organization. The dashboard features drill-down capabilities, data filtering, and automated data refresh.","category":"Power BI","tags":["Dashboard","Business Intelligence","KPI Tracking"],"categoryColor":"bg-yellow-100 text-yellow-800","imageGallery":["/images/projects/thumbnail/customer_feedback-dashboardv-2023.webp","/images/projects/thumbnail/unnamed.png","/images/projects/thumbnail/Infruid's_Self-Service_BI_Tool_Dashboard.jpg"],"icon":null,"iconBgColor":"bg-yellow-200","technologies":["Power BI","DAX","SQL","Power Query","M Language"],"client":"Manufacturing Company","completedDate":"February 2023","featured":true,"isDemo":true,"outcomes":[{"title":"12+","value":12,"description":"Key metrics tracked in real-time"},{"title":"60%","value":60,"description":"Reduction in reporting time"},{"title":"8","value":8,"description":"Departments integrated into a single view"}],"challenges":["Integrating data from disparate systems (ERP, CRM, HRIS)","Creating intuitive visualizations for complex metrics","Ensuring appropriate data security and access controls","Optimizing dashboard performance for large datasets"],"codeSnippets":[{"title":"DAX Measure for Rolling Quarter Sales","language":"dax","code":"Rolling Quarter Sales = \nVAR CurrentDate = MAX(Calendar[Date])\nVAR StartDate = DATE(YEAR(CurrentDate), MONTH(CurrentDate) - 3, 1)\nRETURN\nCALCULATE(\n    SUM(Sales[Amount]),\n    FILTER(\n        ALL(Calendar),\n        Calendar[Date] >= StartDate && \n        Calendar[Date] <= CurrentDate\n    )\n)"}]}]},"__N_SSG":true}